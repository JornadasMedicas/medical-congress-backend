generator client {
    provider      = "prisma-client-js"
    binaryTargets = ["native", "debian-openssl-1.1.x"]
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

model jrn_persona {
    id                     Int                      @id @unique @default(autoincrement()) @db.UnsignedInt
    acronimo               String                   @db.VarChar(10)
    nombre                 String                   @db.VarChar(50)
    categoria              String                   @db.VarChar(50)
    correo                 String                   @db.VarChar(100)
    rfc                    String?                  @db.Char(13)
    tel                    String                   @db.Char(10)
    ciudad                 String                   @db.VarChar(30)
    dependencia            String?                  @db.VarChar(50)
    qr_enviado             Boolean                  @default(false) @db.TinyInt()
    qr_enviado_at          DateTime?                @db.Timestamp(0)
    email_registro         String?                  @db.VarChar(50)
    email_constancia       String?                  @db.VarChar(50)
    created_at             DateTime?                @default(now()) @db.Timestamp(0)
    updated_at             DateTime?                @default(now()) @db.Timestamp(0)
    deleted_at             DateTime?                @db.Timestamp(0)
    jrn_inscritos_talleres jrn_inscritos_talleres[]
    jrn_inscritos_modulos  jrn_inscritos_modulos[]
}

model jrn_categorias {
    id         Int       @id @unique @default(autoincrement()) @db.UnsignedInt
    nombre     String    @db.VarChar(50)
    created_at DateTime? @default(now()) @db.Timestamp(0)
    updated_at DateTime? @default(now()) @db.Timestamp(0)
    deleted_at DateTime? @db.Timestamp(0)
}

model jrn_edicion {
    id         Int       @id @unique @default(autoincrement()) @db.UnsignedInt
    edicion    String    @unique @db.Char(4)
    fec_dia_1  DateTime  @db.Date()
    fec_dia_2  DateTime  @db.Date()
    fec_dia_3  DateTime  @db.Date()
    created_at DateTime? @default(now()) @db.Timestamp(0)
    updated_at DateTime? @default(now()) @db.Timestamp(0)
    deleted_at DateTime? @db.Timestamp(0)

    jrn_talleres          jrn_talleres[]
    jrn_inscritos_modulos jrn_inscritos_modulos[]
}

model jrn_modulos {
    id         Int       @id @unique @default(autoincrement()) @db.UnsignedInt
    nombre     String    @unique @db.VarChar(50)
    created_at DateTime? @default(now()) @db.Timestamp(0)
    updated_at DateTime? @default(now()) @db.Timestamp(0)
    deleted_at DateTime? @db.Timestamp(0)

    jrn_talleres          jrn_talleres[]
    jrn_inscritos_modulos jrn_inscritos_modulos[]
}

model jrn_talleres {
    id          Int       @id @unique @default(autoincrement()) @db.UnsignedInt
    nombre      String    @db.VarChar(50)
    fecha       DateTime  @db.Date
    hora_inicio DateTime  @db.Time()
    hora_fin    DateTime  @db.Time()
    id_modulo   Int       @db.UnsignedInt
    id_edicion  Int       @db.UnsignedInt
    created_at  DateTime? @default(now()) @db.Timestamp(0)
    updated_at  DateTime? @default(now()) @db.Timestamp(0)
    deleted_at  DateTime? @db.Timestamp(0)

    jrn_modulo             jrn_modulos              @relation(fields: [id_modulo], references: [id], onUpdate: Restrict)
    jrn_edicion            jrn_edicion              @relation(fields: [id_edicion], references: [id], onUpdate: Restrict)
    jrn_inscritos_talleres jrn_inscritos_talleres[]
}

model jrn_inscritos_talleres {
    id                    Int       @id @unique @default(autoincrement()) @db.UnsignedInt
    asistio               Boolean   @default(false) @db.TinyInt()
    hoja                  Int?      @db.UnsignedInt
    folio                 Int?      @db.UnsignedInt
    constancia_enviada    Boolean   @default(false) @db.TinyInt()
    constancia_enviada_at DateTime? @db.Timestamp(0)
    id_persona            Int       @db.UnsignedInt
    id_taller             Int       @db.UnsignedInt
    created_at            DateTime? @default(now()) @db.Timestamp(0)
    updated_at            DateTime? @default(now()) @db.Timestamp(0)
    deleted_at            DateTime? @db.Timestamp(0)

    jrn_persona jrn_persona  @relation(fields: [id_persona], references: [id], onUpdate: Restrict)
    jrn_taller  jrn_talleres @relation(fields: [id_taller], references: [id], onUpdate: Restrict)
}

model jrn_inscritos_modulos {
    id                    Int       @id @unique @default(autoincrement()) @db.UnsignedInt
    asistioDia1           Boolean   @default(false) @db.TinyInt()
    asistioDia2           Boolean   @default(false) @db.TinyInt()
    asistioDia3           Boolean   @default(false) @db.TinyInt()
    hoja                  Int?      @db.UnsignedInt
    folio                 Int?      @db.UnsignedInt
    constancia_enviada    Boolean   @default(false) @db.TinyInt()
    constancia_enviada_at DateTime? @db.Timestamp(0)
    id_persona            Int       @db.UnsignedInt
    id_modulo             Int       @db.UnsignedInt
    id_edicion            Int       @db.UnsignedInt
    created_at            DateTime? @default(now()) @db.Timestamp(0)
    updated_at            DateTime? @default(now()) @db.Timestamp(0)
    deleted_at            DateTime? @db.Timestamp(0)

    jrn_persona jrn_persona @relation(fields: [id_persona], references: [id], onUpdate: Restrict)
    jrn_modulo  jrn_modulos @relation(fields: [id_modulo], references: [id], onUpdate: Restrict)
    jrn_edicion jrn_edicion @relation(fields: [id_edicion], references: [id], onUpdate: Restrict)
}
